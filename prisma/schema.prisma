generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  first_name   String?
  last_name    String?
  email        String  @unique
  password     String
  refreshToken String?
  isAdmin      Boolean @default(false)
  Cart         Cart[]
  Order        Order[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  price       Float
  description String?
  featured    Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId Int
  CartItem    CartItem[]
  OrderItem   OrderItem[]
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Cart {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int     @default(1)
  price     Float
}

model Order {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  status    orderStatus @default(PENDING)
  total     Float
  items     OrderItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int     @default(1)
  price     Float
}

enum orderStatus {
  PENDING
  REJECTED
  ACCEPTED
  CANCLED
  PROCESSED
}
